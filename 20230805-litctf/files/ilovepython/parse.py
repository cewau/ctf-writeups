INSTRUCTIONS = {
    '_': {
        '(X)': ['a', '_', '(L)'],
        '(Ra0)': ['(Q0)', 'a', '_'],
        '(Rab)': ['(Qb)', 'a', '_'],
        '(Rad)': ['(Qd)', 'a', '_'],
        '(Rbb)': ['(Qb)', 'b', '_'],
        '(Rcb)': ['(Qb)', 'c', '_'], '(Rdb)': ['(Qb)', 'd', '_'], '(Reb)': ['(Qb)', 'e', '_'], '(Rfb)': ['(Qb)', 'f', '_'], '(Rgb)': ['(Qb)', 'g', '_'], '(Rhb)': ['(Qb)', 'h', '_'], '(Rib)': ['(Qb)', 'i', '_'], '(Rjb)': ['(Qb)', 'j', '_'], '(Rkb)': ['(Qb)', 'k', '_'], '(Rlb)': ['(Qb)', 'l', '_'], '(Rmb)': ['(Qb)', 'm', '_'], '(Rnb)': ['(Qb)', 'n', '_'], '(Rob)': ['(Qb)', 'o', '_'], '(Rpb)': ['(Qb)', 'p', '_'], '(Rqb)': ['(Qb)', 'q', '_'], '(Rrb)': ['(Qb)', 'r', '_'], '(Rsb)': ['(Qb)', 's', '_'], '(Rtb)': ['(Qb)', 't', '_'], '(Rub)': ['(Qb)', 'u', '_'], '(Rvb)': ['(Qb)', 'v', '_'], '(Rwb)': ['(Qb)', 'w', '_'], '(Rxb)': ['(Qb)', 'x', '_'],
        '(Ryb)': ['(Qb)', 'y', '_'],
        '(RzA)': ['(QA)', 'z', '_'],
        '(RzB)': ['(QB)', 'z', '_'],
        '(RzC)': ['(QC)', 'z', '_'], '(RzD)': ['(QD)', 'z', '_'], '(RzE)': ['(QE)', 'z', '_'], '(RzF)': ['(QF)', 'z', '_'], '(RzG)': ['(QG)', 'z', '_'], '(RzH)': ['(QH)', 'z', '_'], '(RzI)': ['(QI)', 'z', '_'], '(RzJ)': ['(QJ)', 'z', '_'], '(RzK)': ['(QK)', 'z', '_'], '(RzL)': ['(QL)', 'z', '_'], '(RzM)': ['(QM)', 'z', '_'], '(RzN)': ['(QN)', 'z', '_'], '(RzO)': ['(QO)', 'z', '_'], '(RzP)': ['(QP)', 'z', '_'], '(RzQ)': ['(QQ)', 'z', '_'], '(RzR)': ['(QR)', 'z', '_'], '(RzS)': ['(QS)', 'z', '_'], '(RzT)': ['(QT)', 'z', '_'], '(RzU)': ['(QU)', 'z', '_'], '(RzV)': ['(QV)', 'z', '_'], '(RzW)': ['(QW)', 'z', '_'], '(RzX)': ['(QX)', 'z', '_'], '(RzY)': ['(QY)', 'z', '_'],
        '(RzZ)': ['(QZ)', 'z', '_'],
        '(Rzc)': ['(Qc)', 'z', '_']
    }, '(Q0)': {
        '(L)': ['(X)', '(Q0)'],
        'A': ['_', '(Q3)', 'A', '_'],
        'B': ['_', '(Q1)', 'B', '_'],
        'C': ['_', '(Q2)', 'C', '_'], 'D': ['_', '(Q3)', 'D', '_'], 'E': ['_', '(Q1)', 'E', '_'], 'F': ['_', '(Q2)', 'F', '_'], 'G': ['_', '(Q3)', 'G', '_'], 'H': ['_', '(Q1)', 'H', '_'], 'I': ['_', '(Q2)', 'I', '_'], 'J': ['_', '(Q3)', 'J', '_'], 'K': ['_', '(Q1)', 'K', '_'], 'L': ['_', '(Q2)', 'L', '_'], 'M': ['_', '(Q3)', 'M', '_'], 'N': ['_', '(Q1)', 'N', '_'], 'O': ['_', '(Q2)', 'O', '_'], 'P': ['_', '(Q3)', 'P', '_'], 'Q': ['_', '(Q1)', 'Q', '_'], 'R': ['_', '(Q2)', 'R', '_'], 'S': ['_', '(Q3)', 'S', '_'], 'T': ['_', '(Q1)', 'T', '_'], 'U': ['_', '(Q2)', 'U', '_'], 'V': ['_', '(Q3)', 'V', '_'], 'W': ['_', '(Q1)', 'W', '_'], 'X': ['_', '(Q2)', 'X', '_'], 'Y': ['_', '(Q3)', 'Y', '_'],
        'Z': ['_', '(Q1)', 'Z', '_'],
        'a': ['(Ra0)'],
        'z': ['_', '(Qa)', 'z', '_']
    }, '(Q1)': {
        '(L)': ['(X)', '(Q1)'],
        'A': ['_', '(Q1)', 'Q', '_'],
        'B': ['_', '(Q1)', 'W', '_'],
        'C': ['_', '(Q1)', 'E', '_'], 'D': ['_', '(Q2)', 'R', '_'], 'E': ['_', '(Q1)', 'T', '_'], 'F': ['_', '(Q3)', 'Y', '_'], 'G': ['_', '(Q2)', 'U', '_'], 'H': ['_', '(Q2)', 'I', '_'], 'I': ['_', '(Q2)', 'O', '_'], 'J': ['_', '(Q3)', 'P', '_'], 'K': ['_', '(Q3)', 'A', '_'], 'L': ['_', '(Q3)', 'S', '_'], 'M': ['_', '(Q3)', 'D', '_'], 'N': ['_', '(Q2)', 'F', '_'], 'O': ['_', '(Q3)', 'G', '_'], 'P': ['_', '(Q1)', 'H', '_'], 'Q': ['_', '(Q3)', 'J', '_'], 'R': ['_', '(Q1)', 'K', '_'], 'S': ['_', '(Q2)', 'L', '_'], 'T': ['_', '(Q1)', 'Z', '_'], 'U': ['_', '(Q2)', 'X', '_'], 'V': ['_', '(Q2)', 'C', '_'], 'W': ['_', '(Q3)', 'V', '_'], 'X': ['_', '(Q1)', 'B', '_'], 'Y': ['_', '(Q1)', 'N', '_'],
        'Z': ['_', '(Q3)', 'M', '_'],
        'a': ['(Ra0)'],
        'z': ['_', '(Qa)', 'z', '_']
    }, '(Q2)': {
        '(L)': ['(X)', '(Q2)'],
        'A': ['_', '(Q3)', 'P', '_'],
        'B': ['_', '(Q3)', 'Y', '_'],
        'C': ['_', '(Q2)', 'F', '_'], 'D': ['_', '(Q3)', 'G', '_'], 'E': ['_', '(Q2)', 'C', '_'], 'F': ['_', '(Q2)', 'R', '_'], 'G': ['_', '(Q2)', 'L', '_'], 'H': ['_', '(Q3)', 'A', '_'], 'I': ['_', '(Q2)', 'O', '_'], 'J': ['_', '(Q1)', 'E', '_'], 'K': ['_', '(Q2)', 'U', '_'], 'L': ['_', '(Q2)', 'I', '_'], 'M': ['_', '(Q3)', 'D', '_'], 'N': ['_', '(Q1)', 'H', '_'], 'O': ['_', '(Q1)', 'T', '_'], 'P': ['_', '(Q1)', 'N', '_'], 'Q': ['_', '(Q3)', 'S', '_'], 'R': ['_', '(Q1)', 'Q', '_'], 'S': ['_', '(Q3)', 'J', '_'], 'T': ['_', '(Q1)', 'K', '_'], 'U': ['_', '(Q2)', 'X', '_'], 'V': ['_', '(Q1)', 'B', '_'], 'W': ['_', '(Q3)', 'M', '_'], 'X': ['_', '(Q1)', 'W', '_'], 'Y': ['_', '(Q3)', 'V', '_'],
        'Z': ['_', '(Q1)', 'Z', '_'],
        'a': ['(Ra0)'],
        'z': ['_', '(Qa)', 'z', '_']
    }, '(Q3)': {
        '(L)': ['(X)', '(Q3)'],
        'A': ['_', '(Q1)', 'Z', '_'],
        'B': ['_', '(Q2)', 'X', '_'],
        'C': ['_', '(Q3)', 'P', '_'], 'D': ['_', '(Q3)', 'M', '_'], 'E': ['_', '(Q2)', 'C', '_'], 'F': ['_', '(Q1)', 'H', '_'], 'G': ['_', '(Q2)', 'R', '_'], 'H': ['_', '(Q1)', 'T', '_'], 'I': ['_', '(Q1)', 'N', '_'], 'J': ['_', '(Q3)', 'S', '_'], 'K': ['_', '(Q3)', 'D', '_'], 'L': ['_', '(Q3)', 'G', '_'], 'M': ['_', '(Q1)', 'K', '_'], 'N': ['_', '(Q3)', 'J', '_'], 'O': ['_', '(Q1)', 'B', '_'], 'P': ['_', '(Q1)', 'W', '_'], 'Q': ['_', '(Q2)', 'F', '_'], 'R': ['_', '(Q2)', 'L', '_'], 'S': ['_', '(Q3)', 'A', '_'], 'T': ['_', '(Q1)', 'E', '_'], 'U': ['_', '(Q2)', 'I', '_'], 'V': ['_', '(Q2)', 'O', '_'], 'W': ['_', '(Q2)', 'U', '_'], 'X': ['_', '(Q3)', 'Y', '_'], 'Y': ['_', '(Q1)', 'Q', '_'],
        'Z': ['_', '(Q3)', 'V', '_'],
        'a': ['(Ra0)'],
        'z': ['_', '(Qa)', 'z', '_']
    },
    '(QA)': {'(L)': ['(X)', '(QA)'], 'A': ['(Rzc)'], 'z': ['_', '(QB)', 'z', '_']},
    '(QB)': {'(L)': ['(X)', '(QB)'], 'B': ['(Rzc)'], 'z': ['_', '(QG)', 'z', '_']},
    '(QC)': {'(L)': ['(X)', '(QC)'], 'C': ['(Rzc)'], 'z': ['_', '(QL)', 'z', '_']}, '(QD)': {'(L)': ['(X)', '(QD)'], 'D': ['(Rzc)'], 'z': ['_', '(QQ)', 'z', '_']}, '(QE)': {'(L)': ['(X)', '(QE)'], 'E': ['(Rzc)'], 'z': ['_', '(QV)', 'z', '_']}, '(QF)': {'(L)': ['(X)', '(QF)'], 'F': ['(Rzc)'], 'z': ['_', '(QA)', 'z', '_']}, '(QG)': {'(L)': ['(X)', '(QG)'], 'G': ['(Rzc)'], 'z': ['_', '(QF)', 'z', '_']}, '(QH)': {'(L)': ['(X)', '(QH)'], 'H': ['(Rzc)'], 'z': ['_', '(QK)', 'z', '_']}, '(QI)': {'(L)': ['(X)', '(QI)'], 'I': ['(Rzc)'], 'z': ['_', '(QP)', 'z', '_']}, '(QJ)': {'(L)': ['(X)', '(QJ)'], 'J': ['(Rzc)'], 'z': ['_', '(QU)', 'z', '_']}, '(QK)': {'(L)': ['(X)', '(QK)'], 'K': ['(Rzc)'], 'z': ['_', '(QZ)', 'z', '_']}, '(QL)': {'(L)': ['(X)', '(QL)'], 'L': ['(Rzc)'], 'z': ['_', '(QE)', 'z', '_']}, '(QM)': {'(L)': ['(X)', '(QM)'], 'M': ['(Rzc)'], 'z': ['_', '(QJ)', 'z', '_']}, '(QN)': {'(L)': ['(X)', '(QN)'], 'N': ['(Rzc)'], 'z': ['_', '(QO)', 'z', '_']}, '(QO)': {'(L)': ['(X)', '(QO)'], 'O': ['(Rzc)'], 'z': ['_', '(QT)', 'z', '_']}, '(QP)': {'(L)': ['(X)', '(QP)'], 'P': ['(Rzc)'], 'z': ['_', '(QY)', 'z', '_']}, '(QQ)': {'(L)': ['(X)', '(QQ)'], 'Q': ['(Rzc)'], 'z': ['_', '(QD)', 'z', '_']}, '(QR)': {'(L)': ['(X)', '(QR)'], 'R': ['(Rzc)'], 'z': ['_', '(QI)', 'z', '_']}, '(QS)': {'(L)': ['(X)', '(QS)'], 'S': ['(Rzc)'], 'z': ['_', '(QN)', 'z', '_']}, '(QT)': {'(L)': ['(X)', '(QT)'], 'T': ['(Rzc)'], 'z': ['_', '(QS)', 'z', '_']}, '(QU)': {'(L)': ['(X)', '(QU)'], 'U': ['(Rzc)'], 'z': ['_', '(QX)', 'z', '_']}, '(QV)': {'(L)': ['(X)', '(QV)'], 'V': ['(Rzc)'], 'z': ['_', '(QC)', 'z', '_']}, '(QW)': {'(L)': ['(X)', '(QW)'], 'W': ['(Rzc)'], 'z': ['_', '(QH)', 'z', '_']}, '(QX)': {'(L)': ['(X)', '(QX)'], 'X': ['(Rzc)'], 'z': ['_', '(QM)', 'z', '_']}, '(QY)': {'(L)': ['(X)', '(QY)'], 'Y': ['(Rzc)'], 'z': ['_', '(QR)', 'z', '_']},
    '(QZ)': {'(L)': ['(X)', '(QZ)'], 'Z': ['(Rzc)'], 'z': ['_', '(QW)', 'z', '_']},
    '(Qa)': {
        '(L)': ['(X)', '(Qa)'],
        'a': ['_', '(Qc)', 'z', '_'],
        'b': ['(Rab)'],
        'c': ['(Rbb)'], 'd': ['(Rcb)'], 'e': ['(Rdb)'], 'f': ['(Reb)'], 'g': ['(Rfb)'], 'h': ['(Rgb)'], 'i': ['(Rhb)'], 'j': ['(Rib)'], 'k': ['(Rjb)'], 'l': ['(Rkb)'], 'm': ['(Rlb)'], 'n': ['(Rmb)'], 'o': ['(Rnb)'], 'p': ['(Rob)'], 'q': ['(Rpb)'], 'r': ['(Rqb)'], 's': ['(Rrb)'], 't': ['(Rsb)'], 'u': ['(Rtb)'], 'v': ['(Rub)'], 'w': ['(Rvb)'], 'x': ['(Rwb)'], 'y': ['(Rxb)'],
        'z': ['(Ryb)']
    }, '(Qb)': {
        '(L)': ['(X)', '(Qb)'],
        'z': ['_', '(Q0)', 'z', '_']
    }, '(Qc)': {
        '(L)': ['(X)', '(Qc)'],
        'A': ['(RzA)'],
        'B': ['(RzB)'],
        'C': ['(RzC)'], 'D': ['(RzD)'], 'E': ['(RzE)'], 'F': ['(RzF)'], 'G': ['(RzG)'], 'H': ['(RzH)'], 'I': ['(RzI)'], 'J': ['(RzJ)'], 'K': ['(RzK)'], 'L': ['(RzL)'], 'M': ['(RzM)'], 'N': ['(RzN)'], 'O': ['(RzO)'], 'P': ['(RzP)'], 'Q': ['(RzQ)'], 'R': ['(RzR)'], 'S': ['(RzS)'], 'T': ['(RzT)'], 'U': ['(RzU)'], 'V': ['(RzV)'], 'W': ['(RzW)'], 'X': ['(RzX)'], 'Y': ['(RzY)'],
        'Z': ['(RzZ)'],
        'a': ['(Rad)'],
        'z': ['_', '(Qc)', 'z', '_']
    }, '(Qd)': {
        '(L)': ['(X)', '(Qd)'],
        'a': ['(obj)'],
        'z': ['_', '(Qd)', 'z', '_']
    }}

CONTRA = {'(X)', '(L)', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', '_'}
CO = {'(Ra0)', '(Rab)', '(Rad)', '(Rbb)', '(Rcb)', '(Rdb)', '(Reb)', '(Rfb)', '(Rgb)', '(Rhb)', '(Rib)', '(Rjb)', '(Rkb)', '(Rlb)', '(Rmb)', '(Rnb)', '(Rob)', '(Rpb)', '(Rqb)', '(Rrb)', '(Rsb)', '(Rtb)', '(Rub)', '(Rvb)', '(Rwb)', '(Rxb)', '(Ryb)', '(RzA)', '(RzB)', '(RzC)', '(RzD)', '(RzE)', '(RzF)', '(RzG)', '(RzH)', '(RzI)', '(RzJ)', '(RzK)', '(RzL)', '(RzM)', '(RzN)', '(RzO)', '(RzP)', '(RzQ)', '(RzR)', '(RzS)', '(RzT)', '(RzU)', '(RzV)', '(RzW)', '(RzX)', '(RzY)', '(RzZ)', '(Rzc)'}

s0 = (list('_'.join('LITCTFWUNLASTTHINGINSURTBRASEZOKAEBAI')) + ['_', '(L)', '_', '(E)'])[::-1]
# s0 = (list('_'.join('LITCTFABCDEFGHIJKLMNOPQRSTUVWXYZABCDE')) + ['_', '(L)', '_', '(E)'])[::-1]
s1 = (['(Q0)', 'z', '_', 'z', '_', 'N', '_', 'N', '_', 'J', '_', 'O', '_', 'N', '_', 'V', '_', 'E', '_', 'G', '_', 'Z', '_', 'U', '_', 'Z', '_', 'U', '_', 'U', '_', 'Y', '_', 'C', '_', 'I', '_', 'S', '_', 'T', '_', 'Y', '_', 'G', '_', 'W', '_', 'B', '_', 'G', '_', 'U', '_', 'U', '_', 'Z', '_', 'H', '_', 'W', '_', 'Q', '_', 'V', '_', 'V', '_', 'K', '_', 'M', '_', 'G', '_', 'U', '_', 'W', '_', 'D', '_', '(L)', '_', '(E)'])[::-1]
s = [s0, s1]

# from string import ascii_uppercase as UPPER

def step(op, param):
    assert param in CONTRA or param in CO, f'{param} is invalid'
    # if op.startswith('(Q') and op[2] in UPPER and param in UPPER:
    #     print(op[2], end='')
    #     return ['(Rzc)'], True
    return (
        None if op == param else INSTRUCTIONS[op][param][::-1],
        param in CONTRA
    )

def prettify(stack):
    return ''.join(reversed(stack))

ib = 1 # which stack has control (contains the opcode)
prev_print = ''
with open('output.txt', 'w') as f:
    while True:
        prev_print = f'{prettify(s[0])} {">" if ib else "<"}= {prettify(s[1])}\n'
        res, change = step(s[ib].pop(), s[1-ib].pop())
        if res != None:
            f.write(prev_print)
            s[ib] += res
        if change:
            ib = 1-ib
